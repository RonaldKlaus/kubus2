<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    static private $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'program' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\ProgramController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/program/',    ),  ),  4 =>   array (  ),),
        'program_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\ProgramController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/program',    ),  ),  4 =>   array (  ),),
        'program_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\ProgramController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/program/new',    ),  ),  4 =>   array (  ),),
        'program_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\ProgramController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/program/create',    ),  ),  4 =>   array (  ),),
        'program_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\ProgramController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/program',    ),  ),  4 =>   array (  ),),
        'program_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\ProgramController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/program',    ),  ),  4 =>   array (  ),),
        'program_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\ProgramController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/program',    ),  ),  4 =>   array (  ),),
        'lesson' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\LessonController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/lesson/',    ),  ),  4 =>   array (  ),),
        'lesson_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\LessonController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/lesson',    ),  ),  4 =>   array (  ),),
        'lesson_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\LessonController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/lesson/new',    ),  ),  4 =>   array (  ),),
        'lesson_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\LessonController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/lesson/create',    ),  ),  4 =>   array (  ),),
        'lesson_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\LessonController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/lesson',    ),  ),  4 =>   array (  ),),
        'lesson_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\LessonController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/lesson',    ),  ),  4 =>   array (  ),),
        'lesson_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\LessonController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/lesson',    ),  ),  4 =>   array (  ),),
        'person' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\PersonController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/person/',    ),  ),  4 =>   array (  ),),
        'person_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\PersonController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/person',    ),  ),  4 =>   array (  ),),
        'person_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\PersonController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/person/new',    ),  ),  4 =>   array (  ),),
        'person_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\PersonController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/person/create',    ),  ),  4 =>   array (  ),),
        'person_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\PersonController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/person',    ),  ),  4 =>   array (  ),),
        'person_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\PersonController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/person',    ),  ),  4 =>   array (  ),),
        'person_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\PersonController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/person',    ),  ),  4 =>   array (  ),),
        'teacher' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\TeacherController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/teacher/',    ),  ),  4 =>   array (  ),),
        'teacher_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\TeacherController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/teacher',    ),  ),  4 =>   array (  ),),
        'teacher_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\TeacherController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/teacher/new',    ),  ),  4 =>   array (  ),),
        'teacher_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\TeacherController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/teacher/create',    ),  ),  4 =>   array (  ),),
        'teacher_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\TeacherController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/teacher',    ),  ),  4 =>   array (  ),),
        'teacher_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\TeacherController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/teacher',    ),  ),  4 =>   array (  ),),
        'teacher_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\TeacherController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/teacher',    ),  ),  4 =>   array (  ),),
        'course' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\CourseController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/course/',    ),  ),  4 =>   array (  ),),
        'course_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\CourseController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/course',    ),  ),  4 =>   array (  ),),
        'course_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\CourseController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/course/new',    ),  ),  4 =>   array (  ),),
        'course_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\CourseController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/course/create',    ),  ),  4 =>   array (  ),),
        'course_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\CourseController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/course',    ),  ),  4 =>   array (  ),),
        'course_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\CourseController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/course',    ),  ),  4 =>   array (  ),),
        'course_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\CourseController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backend/course',    ),  ),  4 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\AuthenticationController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/login',    ),  ),  4 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\AuthenticationController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/logout',    ),  ),  4 =>   array (  ),),
        'index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kubus\\BackendBundle\\Controller\\NavigationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backend/',    ),  ),  4 =>   array (  ),),
        'kubus_frontend_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Kubus\\FrontendBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
